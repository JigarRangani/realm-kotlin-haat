name: PR Build
on:
  pull_request:
    paths-ignore:
    - '**.md'
env:
  REALM_DISABLE_ANALYTICS: true
jobs: 
  static-analysis:
    uses: ./.github/workflows/include_static_analysis.yml

  build-packages:
    runs-on: ubuntu-latest
    needs: static-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          submodules: "recursive"

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1.0.4

      # TODO I'm not sure this catches changes to our Config.kt, what is the impact?
      #  https://github.com/actions/setup-java#caching-packages-dependencies
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11

      # TODO Default behavior is only caching from main/master. Unclear what the best caching strategy is for us.
      # TODO What is the rules and limits for caching on Github
      - name: Setup Gradle and task/dependency caching
        uses: gradle/gradle-build-action@v2
        with:
          cache-read-only: ${{ github.ref != 'refs/heads/master' && github.ref != 'refs/heads/releases' && github.ref != 'refs/heads/feature/github-actions' }}

      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.21.4'

      - name: Setup Ninja
        uses: ashutoshvarma/setup-ninja@master

      # TODO How to do ccache caching? It is unclear what the tradeoffs are?
      - name: Install ccache
        uses: hendrikmuhs/ccache-action@v1.2.2
        with:
          key: realm-kotlin-${{ matrix.os }}

      - name: Prepend ccache executables to the PATH
        run: echo PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH" >> $GITHUB_ENV

      # TOOD This matches 23.2.8568313, but what happens if we a define specific version in our build? 
      - name: Setup NDK
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: r23c

      - name: Build packages
        working-directory: packages
        run: ./gradlew publishCIPackages --info
